on:
  push:
    branches:
      - master

jobs:
  bot:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: install dependencies
        run: yarn
      - name: create the package with shared code using lerna
        run: npx lerna bootstrap
      - run: mkdir -p services/bot/node_modules/@spotifier
      - name: copy @spotifier package from root "node_modules" for lambdas "node_modules"
        run: cp -v -R -L node_modules/@spotifier/* services/bot/node_modules/@spotifier/ > /dev/null
      - name: serverless deploy
        run: cd services/bot && npx serverless deploy --stage prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  updater:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: install dependencies
        run: yarn
      - name: create the package with shared code using lerna
        run: npx lerna bootstrap
      - run: mkdir -p services/bot/node_modules/@spotifier
      - name: copy @spotifier package from root "node_modules" for lambdas "node_modules"
        run: cp -v -R -L node_modules/@spotifier/* services/bot/node_modules/@spotifier/ > /dev/null
      - name: serverless deploy
        run: cd services/updater && npx serverless deploy --stage prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  notification-queue:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: install dependencies
        run: yarn
      - name: create the package with shared code using lerna
        run: npx lerna bootstrap
      - run: mkdir -p services/bot/node_modules/@spotifier
      - name: copy @spotifier package from root "node_modules" for lambdas "node_modules"
        run: cp -v -R -L node_modules/@spotifier/* services/bot/node_modules/@spotifier/ > /dev/null
      - name: serverless deploy
        run: cd services/notification-queue && npx serverless deploy --stage prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
